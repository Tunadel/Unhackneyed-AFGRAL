[gd_scene load_steps=1 format=2]
[ext_resource id=1 path="text.png.001" type="Texture"]


[ext_resource id=2 path="sand.png" type="Texture"]


[ext_resource id=3 path="text.png.000" type="Texture"]


[ext_resource id=4 path="text.png.002" type="Texture"]


[ext_resource id=5 path="abfa1b5c-7f84-433d-ae41-5eb3ea2a71f3_scaled.jpg.005" type="Texture"]


[ext_resource id=6 path="text.png.003" type="Texture"]


[ext_resource id=7 path="text.png.004" type="Texture"]


[ext_resource id=8 path="text.png.005" type="Texture"]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D uni1_textpng001;


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    roughness_out = 1.0;
}



void vertex() {
	
}


void fragment() {
	// node: Image Texture
	// type: ShaderNodeTexImage
	// texture image from node Image Texture
	vec4 var1_ImageTexture_Color;
	float var2_ImageTexture_Alpha;
	node_tex_image(vec3(0.0, 0.0, 0.0), uni1_textpng001, var1_ImageTexture_Color, var2_ImageTexture_Alpha);
	
	// node: Diffuse BSDF
	// type: ShaderNodeBsdfDiffuse
	float var3_DiffuseBSDF_Roughness;
	var3_DiffuseBSDF_Roughness = 0.0;
	vec3 var4_out_albedo;
	float var5_out_specular;
	float var6_out_oren_nayar_roughness;
	node_bsdf_diffuse(var1_ImageTexture_Color, var3_DiffuseBSDF_Roughness, var4_out_albedo, var5_out_specular, var6_out_oren_nayar_roughness);
	
	ALBEDO = var4_out_albedo;
	SPECULAR = var5_out_specular;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)
shader_param/uni1_textpng001 = ExtResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "Cylinder001"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 0.2, -1.0, 0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, 0.2, -0.5, 0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, -0.2, -1.0, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, 0.5, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, 0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, -0.5, -0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -8.74228e-08, 0.2, 1.0, 0.866025, 0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, -0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, -8.74228e-08, -0.2, 1.0, -0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5),
		Vector3Array(0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 0.5, 0.0, -0.866025, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0),
		FloatArray(-0.277573, 0.947244, -0.160257, 1.0, -0.520578, 0.799165, -0.300556, 1.0, -0.157988, 0.983219, -0.0912146, 1.0, 0.0, 0.0373212, -0.999303, 1.0, 0.0, 0.0373212, -0.999303, 1.0, 0.0, 0.0373212, -0.999303, 1.0, 0.577291, -0.745417, -0.333299, 1.0, 0.10894, -0.992057, -0.0628966, 1.0, 0.714895, -0.564416, -0.412745, 1.0, -0.277574, -0.947244, -0.160257, 1.0, -0.520579, -0.799164, -0.300556, 1.0, -0.157989, -0.983219, -0.0912152, 1.0, -0.5, 0.0, -0.866025, -1.0, -0.5, 0.0, -0.866025, -1.0, -0.5, 0.0, -0.866025, -1.0, 0.0, -0.0282846, -0.9996, 1.0, 0.0, -0.00904188, -0.999959, 1.0, 0.0, -0.0373217, -0.999303, 1.0, 0.577291, 0.745417, -0.333299, 1.0, 0.108941, 0.992056, -0.0628969, 1.0, 0.714896, 0.564416, -0.412745, 1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, -0.613785, 0.705472, -0.354369, 1.0, 1.49012e-07, -5.99447e-07, -1.0, 1.0, 1.49012e-07, -5.99447e-07, -1.0, 1.0, 1.49012e-07, -5.99447e-07, -1.0, 1.0, -0.0996378, -0.993359, 0.0575259, 1.0, -0.613785, -0.705472, -0.354369, 1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 1.72064e-08, -0.866025, -1.0, -0.5, 1.72064e-08, -0.866025, -1.0, -0.5, 1.72064e-08, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866026, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, 0.0, 0.0, -1.0, 1.0, -0.0996373, 0.99336, 0.0575256, 1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.561346, 0.818711, 0.476672, 0.753413, 0.512966, 0.823946, 0.498428, 0.709544, 0.401804, 0.749317, 0.476672, 0.753413, 0.372085, 0.709544, 0.367033, 0.817303, 0.401804, 0.749317, 0.318654, 0.822537, 0.403328, 0.887836, 0.367033, 0.817303, 0.926355, 0.632376, 0.815, 0.825249, 0.703645, 0.632376, 0.381572, 0.931705, 0.478195, 0.891932, 0.403328, 0.887836, 0.507915, 0.931705, 0.512966, 0.823946, 0.478195, 0.891932, 0.676646, 0.781527, 0.676646, 0.671807, 0.866687, 0.671807, 0.498428, 0.709544, 0.498428, 0.709544, 0.372085, 0.709544, 0.401804, 0.749317, 0.318654, 0.822537, 0.381572, 0.931705, 0.703645, 0.632376, 0.815, 0.568084, 0.926355, 0.632376, 0.926355, 0.632376, 0.926355, 0.760958, 0.815, 0.825249, 0.815, 0.825249, 0.703645, 0.760958, 0.703645, 0.632376, 0.507915, 0.931705, 0.561346, 0.818711, 0.676646, 0.671807, 0.771667, 0.616947, 0.866687, 0.671807, 0.866687, 0.671807, 0.866687, 0.781527, 0.771667, 0.836386, 0.771667, 0.836386, 0.676646, 0.781527, 0.866687, 0.671807),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 0, 1, 24, 25, 27, 26, 6, 7, 28, 9, 10, 29, 30, 32, 31, 33, 35, 34, 36, 38, 37, 15, 16, 39, 18, 19, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48)
	],
	"morph_arrays":[]
}

[sub_resource id=4 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D uni1_sandpng;


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    roughness_out = 1.0;
}



void vertex() {
	
}


void fragment() {
	// node: Image Texture
	// type: ShaderNodeTexImage
	// texture image from node Image Texture
	vec4 var1_ImageTexture_Color;
	float var2_ImageTexture_Alpha;
	node_tex_image(vec3(0.0, 0.0, 0.0), uni1_sandpng, var1_ImageTexture_Color, var2_ImageTexture_Alpha);
	
	// node: Diffuse BSDF
	// type: ShaderNodeBsdfDiffuse
	float var3_DiffuseBSDF_Roughness;
	var3_DiffuseBSDF_Roughness = 0.0;
	vec3 var4_out_albedo;
	float var5_out_specular;
	float var6_out_oren_nayar_roughness;
	node_bsdf_diffuse(var1_ImageTexture_Color, var3_DiffuseBSDF_Roughness, var4_out_albedo, var5_out_specular, var6_out_oren_nayar_roughness);
	
	ALBEDO = var4_out_albedo;
	SPECULAR = var5_out_specular;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
}
"

[sub_resource id=5 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(4)
shader_param/uni1_sandpng = ExtResource(2)

[sub_resource id=6 type="ArrayMesh"]

resource_name = "Cylinder004"
surfaces/0 = {
	"material":SubResource(5),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 0.2, -1.0, 0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, 0.2, -0.5, 0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, -0.2, -1.0, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, 0.5, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, 0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, -0.5, -0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -8.74228e-08, 0.2, 1.0, 0.866025, 0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, -0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, -8.74228e-08, -0.2, 1.0, -0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5),
		Vector3Array(0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 0.5, 0.0, -0.866025, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0),
		FloatArray(0.866025, 2.09444e-07, 0.5, 1.0, 0.866025, 3.95912e-07, 0.5, 1.0, 0.866025, 1.21826e-07, 0.5, 1.0, 0.0, 4.56846e-07, 1.0, 1.0, 0.0, 4.56846e-07, 1.0, 1.0, 0.0, 4.56846e-07, 1.0, 1.0, 0.866025, 2.89278e-07, -0.5, 1.0, 0.866025, 1.91932e-07, -0.5, 1.0, 0.866025, 3.3502e-07, -0.5, 1.0, 0.866025, -2.41385e-08, 0.5, 1.0, 0.866025, -1.40326e-07, 0.5, 1.0, 0.866025, 3.04564e-08, 0.5, 1.0, 1.75077e-07, 0.0, -1.0, 1.0, 1.75077e-07, 0.0, -1.0, 1.0, 1.75077e-07, 0.0, -1.0, 1.0, 0.0, -2.31847e-07, 1.0, 1.0, 0.0, -2.06725e-07, 1.0, 1.0, 0.0, -2.43651e-07, 1.0, 1.0, 0.866025, -1.42143e-08, -0.5, 1.0, 0.866025, 8.51682e-08, -0.5, 1.0, 0.866025, -6.09127e-08, -0.5, 1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 0.866025, 4.83531e-07, 0.5, 1.0, -1.49012e-07, 6.30044e-07, 1.0, 1.0, -1.49012e-07, 6.30043e-07, 1.0, 1.0, -1.49012e-07, 6.30043e-07, 1.0, 1.0, 0.866025, 1.46191e-07, -0.5, 1.0, 0.866025, -1.94921e-07, 0.5, 1.0, -3.78663e-08, 0.0, -1.0, 1.0, -3.78663e-08, 0.0, -1.0, 1.0, -3.78663e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.50066e-07, -2.5821e-15, -1.0, 1.0, 1.50066e-07, -2.5821e-15, -1.0, 1.0, 1.50066e-07, -2.5821e-15, -1.0, 1.0, 0.0, -1.94921e-07, 1.0, 1.0, 0.866025, 1.31867e-07, -0.5, 1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.333345, 0.999965, 0.666655, 0.877649, 0.333345, 0.877649, 0.666655, 0.999965, 0.999965, 0.877649, 0.666655, 0.877649, 0.999965, 0.877649, 0.666655, 0.999965, 0.999965, 0.999965, 0.666655, 0.877649, 0.333345, 0.999965, 0.666655, 0.999965, 0.999911, 0.395195, 0.250045, -0.00199342, 0.250044, 0.792384, 0.333345, 0.877649, 3.50194e-05, 0.999965, 0.333345, 0.999965, 3.49725e-05, 0.999965, 0.333345, 0.877649, 3.49725e-05, 0.877649, 0.676646, 0.781527, 0.676646, 0.671807, 0.866687, 0.671807, 0.666655, 0.999965, 0.666655, 0.999965, 0.999965, 0.999965, 0.999965, 0.877649, 0.666655, 0.877649, 0.333345, 0.877649, 0.250044, 0.792384, 0.749955, 0.792384, 0.999911, 0.395195, 0.999911, 0.395195, 0.749955, -0.00199342, 0.250045, -0.00199342, 0.250045, -0.00199342, 8.91201e-05, 0.395195, 0.250044, 0.792384, 3.49724e-05, 0.877649, 0.333345, 0.999965, 0.676646, 0.671807, 0.771667, 0.616947, 0.866687, 0.671807, 0.866687, 0.671807, 0.866687, 0.781527, 0.771667, 0.836386, 0.771667, 0.836386, 0.676646, 0.781527, 0.866687, 0.671807),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 0, 1, 24, 25, 27, 26, 6, 7, 28, 9, 10, 29, 30, 32, 31, 33, 35, 34, 36, 38, 37, 15, 16, 39, 18, 19, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48)
	],
	"morph_arrays":[]
}

[sub_resource id=7 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D uni1_textpng000;


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    roughness_out = 1.0;
}



void vertex() {
	
}


void fragment() {
	// node: Image Texture
	// type: ShaderNodeTexImage
	// texture image from node Image Texture
	vec4 var1_ImageTexture_Color;
	float var2_ImageTexture_Alpha;
	node_tex_image(vec3(0.0, 0.0, 0.0), uni1_textpng000, var1_ImageTexture_Color, var2_ImageTexture_Alpha);
	
	// node: Diffuse BSDF
	// type: ShaderNodeBsdfDiffuse
	float var3_DiffuseBSDF_Roughness;
	var3_DiffuseBSDF_Roughness = 0.0;
	vec3 var4_out_albedo;
	float var5_out_specular;
	float var6_out_oren_nayar_roughness;
	node_bsdf_diffuse(var1_ImageTexture_Color, var3_DiffuseBSDF_Roughness, var4_out_albedo, var5_out_specular, var6_out_oren_nayar_roughness);
	
	ALBEDO = var4_out_albedo;
	SPECULAR = var5_out_specular;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
}
"

[sub_resource id=8 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(7)
shader_param/uni1_textpng000 = ExtResource(3)

[sub_resource id=9 type="ArrayMesh"]

resource_name = "Cylinder003"
surfaces/0 = {
	"material":SubResource(8),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 0.2, -1.0, 0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, 0.2, -0.5, 0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, -0.2, -1.0, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, 0.5, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, 0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, -0.5, -0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -8.74228e-08, 0.2, 1.0, 0.866025, 0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, -0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, -8.74228e-08, -0.2, 1.0, -0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5),
		Vector3Array(0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 0.5, 0.0, -0.866025, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0),
		FloatArray(-0.866025, 5.12505e-07, -0.5, -1.0, -0.866025, 4.1889e-07, -0.5, -1.0, -0.866025, 5.56494e-07, -0.5, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.866025, -9.08153e-08, -0.5, -1.0, 0.866025, -2.84086e-07, -0.5, -1.0, 0.866025, 0.0, -0.5, -1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, 2.57161e-08, 0.0, -1.0, 1.0, 2.57161e-08, 0.0, -1.0, 1.0, 2.57161e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, -0.866025, 3.74901e-07, -0.5, -1.0, 1.49012e-07, 0.0, -1.0, -1.0, 1.49012e-07, 0.0, -1.0, -1.0, 1.49012e-07, 0.0, -1.0, -1.0, 0.866025, -3.74901e-07, -0.5, -1.0, -0.866025, 0.0, -0.5, 1.0, 5.96046e-08, -1.02558e-15, -1.0, 1.0, 5.96046e-08, -1.02558e-15, -1.0, 1.0, 5.96046e-08, -1.02558e-15, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.54297e-07, -2.65489e-15, -1.0, 1.0, 1.54297e-07, -2.65489e-15, -1.0, 1.0, 1.54297e-07, -2.65489e-15, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.866025, 0.0, -0.5, 1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.241043, 0.243095, 0.177335, 0.115905, 0.241043, 0.115905, 0.177335, 0.243096, 0.113626, 0.115905, 0.177335, 0.115905, 0.113626, 0.243096, 0.0499182, 0.115905, 0.113626, 0.115905, 0.0333108, 0.254328, 0.103681, 0.0993818, 0.0333108, 0.0993818, 0.25123, 0.170538, 0.0689038, 0.0739635, 0.0689038, 0.267113, 0.103681, 0.254328, 0.174051, 0.0993818, 0.103681, 0.0993818, 0.174051, 0.254328, 0.244422, 0.0993818, 0.174051, 0.0993818, 0.648313, 0.28986, 0.648313, 0.18014, 0.838354, 0.18014, 0.177335, 0.243096, 0.177335, 0.243096, 0.113626, 0.243096, 0.113626, 0.115905, 0.0499182, 0.243095, 0.103681, 0.254328, 0.0689038, 0.267113, 0.190455, 0.267113, 0.25123, 0.170538, 0.25123, 0.170538, 0.190455, 0.0739635, 0.0689038, 0.0739635, 0.0689038, 0.0739635, 0.00812825, 0.170538, 0.0689038, 0.267113, 0.174051, 0.254328, 0.244422, 0.254328, 0.648313, 0.18014, 0.743333, 0.12528, 0.838354, 0.18014, 0.838354, 0.18014, 0.838354, 0.28986, 0.743333, 0.34472, 0.743333, 0.34472, 0.648313, 0.28986, 0.838354, 0.18014),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 0, 1, 24, 25, 27, 26, 6, 7, 28, 9, 10, 29, 30, 32, 31, 33, 35, 34, 36, 38, 37, 15, 16, 39, 18, 19, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48)
	],
	"morph_arrays":[]
}

[sub_resource id=10 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D uni1_textpng002;


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    roughness_out = 1.0;
}



void vertex() {
	
}


void fragment() {
	// node: Image Texture
	// type: ShaderNodeTexImage
	// texture image from node Image Texture
	vec4 var1_ImageTexture_Color;
	float var2_ImageTexture_Alpha;
	node_tex_image(vec3(0.0, 0.0, 0.0), uni1_textpng002, var1_ImageTexture_Color, var2_ImageTexture_Alpha);
	
	// node: Diffuse BSDF
	// type: ShaderNodeBsdfDiffuse
	float var3_DiffuseBSDF_Roughness;
	var3_DiffuseBSDF_Roughness = 0.0;
	vec3 var4_out_albedo;
	float var5_out_specular;
	float var6_out_oren_nayar_roughness;
	node_bsdf_diffuse(var1_ImageTexture_Color, var3_DiffuseBSDF_Roughness, var4_out_albedo, var5_out_specular, var6_out_oren_nayar_roughness);
	
	ALBEDO = var4_out_albedo;
	SPECULAR = var5_out_specular;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
}
"

[sub_resource id=11 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(10)
shader_param/uni1_textpng002 = ExtResource(4)

[sub_resource id=12 type="ArrayMesh"]

resource_name = "Cylinder000"
surfaces/0 = {
	"material":SubResource(11),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 0.2, -1.0, 0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, 0.2, -0.5, 0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, -0.2, -1.0, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, 0.5, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, 0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, -0.5, -0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -8.74228e-08, 0.2, 1.0, 0.866025, 0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, -0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, -8.74228e-08, -0.2, 1.0, -0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5),
		Vector3Array(0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 0.5, 0.0, -0.866025, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0),
		FloatArray(-0.866025, 5.12505e-07, -0.5, -1.0, -0.866025, 4.1889e-07, -0.5, -1.0, -0.866025, 5.56494e-07, -0.5, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.866025, -9.08153e-08, -0.5, -1.0, 0.866025, -2.84086e-07, -0.5, -1.0, 0.866025, 0.0, -0.5, -1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, 2.59532e-08, 0.0, -1.0, 1.0, 2.59532e-08, 0.0, -1.0, 1.0, 2.59532e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, -0.866025, 3.74901e-07, -0.5, -1.0, 1.49012e-07, 0.0, -1.0, -1.0, 1.49012e-07, 0.0, -1.0, -1.0, 1.49012e-07, 0.0, -1.0, -1.0, 0.866025, -3.74901e-07, -0.5, -1.0, -0.866025, 0.0, -0.5, 1.0, 5.96046e-08, -1.02558e-15, -1.0, 1.0, 5.96046e-08, -1.02558e-15, -1.0, 1.0, 5.96046e-08, -1.02558e-15, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.55719e-07, -2.67936e-15, -1.0, 1.0, 1.55719e-07, -2.67936e-15, -1.0, 1.0, 1.55719e-07, -2.67936e-15, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.866025, 0.0, -0.5, 1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.235751, 0.749741, 0.172043, 0.622551, 0.235751, 0.622551, 0.172043, 0.749741, 0.108335, 0.622551, 0.172043, 0.622551, 0.108335, 0.749741, 0.0446269, 0.622551, 0.108335, 0.622551, 0.0448112, 0.797509, 0.107515, 0.659444, 0.0448112, 0.659444, 0.262026, 0.681152, 0.0813643, 0.585459, 0.0813643, 0.776845, 0.107515, 0.797509, 0.170218, 0.659444, 0.107515, 0.659444, 0.170218, 0.797509, 0.232921, 0.659444, 0.170218, 0.659444, 0.648313, 0.28986, 0.648313, 0.18014, 0.838354, 0.18014, 0.172043, 0.749741, 0.172043, 0.749741, 0.108335, 0.749741, 0.108335, 0.622551, 0.0446269, 0.749741, 0.107515, 0.797509, 0.0813643, 0.776845, 0.201805, 0.776845, 0.262026, 0.681152, 0.262026, 0.681152, 0.201805, 0.585459, 0.0813643, 0.585459, 0.0813643, 0.585459, 0.0211438, 0.681152, 0.0813643, 0.776845, 0.170218, 0.797509, 0.232921, 0.797509, 0.648313, 0.18014, 0.743333, 0.12528, 0.838354, 0.18014, 0.838354, 0.18014, 0.838354, 0.28986, 0.743333, 0.34472, 0.743333, 0.34472, 0.648313, 0.28986, 0.838354, 0.18014),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 0, 1, 24, 25, 27, 26, 6, 7, 28, 9, 10, 29, 30, 32, 31, 33, 35, 34, 36, 38, 37, 15, 16, 39, 18, 19, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48)
	],
	"morph_arrays":[]
}

[sub_resource id=13 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D uni1_abfa1b5c7f84433dae415eb3ea2a71f3_scaledjpg005;


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    roughness_out = 1.0;
}



void vertex() {
	
}


void fragment() {
	// node: Image Texture
	// type: ShaderNodeTexImage
	// texture image from node Image Texture
	vec4 var1_ImageTexture_Color;
	float var2_ImageTexture_Alpha;
	node_tex_image(vec3(0.0, 0.0, 0.0), uni1_abfa1b5c7f84433dae415eb3ea2a71f3_scaledjpg005, var1_ImageTexture_Color, var2_ImageTexture_Alpha);
	
	// node: Diffuse BSDF
	// type: ShaderNodeBsdfDiffuse
	float var3_DiffuseBSDF_Roughness;
	var3_DiffuseBSDF_Roughness = 0.0;
	vec3 var4_out_albedo;
	float var5_out_specular;
	float var6_out_oren_nayar_roughness;
	node_bsdf_diffuse(var1_ImageTexture_Color, var3_DiffuseBSDF_Roughness, var4_out_albedo, var5_out_specular, var6_out_oren_nayar_roughness);
	
	ALBEDO = var4_out_albedo;
	SPECULAR = var5_out_specular;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
}
"

[sub_resource id=14 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(13)
shader_param/uni1_abfa1b5c7f84433dae415eb3ea2a71f3_scaledjpg005 = ExtResource(5)

[sub_resource id=15 type="ArrayMesh"]

resource_name = "Cylinder006"
surfaces/0 = {
	"material":SubResource(14),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 0.2, -1.0, 0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, 0.2, -0.5, 0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, -0.2, -1.0, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, 0.5, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, 0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, -0.5, -0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -8.74228e-08, 0.2, 1.0, 0.866025, 0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, -0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, -8.74228e-08, -0.2, 1.0, -0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5),
		Vector3Array(0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 0.5, 0.0, -0.866025, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0),
		FloatArray(-0.277574, 0.947244, -0.160257, 1.0, -0.520578, 0.799165, -0.300556, 1.0, -0.157989, 0.983219, -0.0912151, 1.0, 0.0, 0.037322, -0.999303, 1.0, 0.0, 0.037322, -0.999303, 1.0, 0.0, 0.037322, -0.999303, 1.0, 0.577291, -0.745418, -0.333299, 1.0, 0.10894, -0.992057, -0.0628966, 1.0, 0.714895, -0.564417, -0.412745, 1.0, -0.277574, -0.947244, -0.160257, 1.0, -0.520578, -0.799165, -0.300556, 1.0, -0.157989, -0.983219, -0.0912151, 1.0, -0.5, 0.0, -0.866025, -1.0, -0.5, 0.0, -0.866025, -1.0, -0.5, 0.0, -0.866025, -1.0, 0.0, -0.0282848, -0.9996, 1.0, 0.0, -0.00904195, -0.999959, 1.0, 0.0, -0.037322, -0.999303, 1.0, 0.57729, 0.745418, -0.333299, 1.0, 0.10894, 0.992057, -0.0628966, 1.0, 0.714895, 0.564417, -0.412745, 1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, -0.613785, 0.705472, -0.354369, 1.0, 1.49012e-07, 0.0, -1.0, 1.0, 1.49012e-07, 0.0, -1.0, 1.0, 1.49012e-07, 0.0, -1.0, 1.0, -0.0996377, -0.993359, 0.0575258, 1.0, -0.613785, -0.705472, -0.354369, 1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.500001, 1.72064e-08, -0.866025, -1.0, -0.500001, 1.72064e-08, -0.866025, -1.0, -0.500001, 1.72064e-08, -0.866025, -1.0, -0.499999, 8.60318e-09, -0.866026, -1.0, -0.499999, 8.60318e-09, -0.866026, -1.0, -0.499999, 8.60318e-09, -0.866026, -1.0, 0.0, 0.0, -1.0, 1.0, -0.0996377, 0.993359, 0.0575259, 1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.937791, 0.217311, 0.864901, 0.161101, 0.896144, 0.221817, 0.88363, 0.123337, 0.800454, 0.157575, 0.864901, 0.161101, 0.77487, 0.123337, 0.770522, 0.216098, 0.800454, 0.157575, 0.728876, 0.220604, 0.801766, 0.276815, 0.770522, 0.216098, 0.887721, 0.259959, 0.49, 0.948832, 0.0922794, 0.259959, 0.783037, 0.314578, 0.866213, 0.280341, 0.801766, 0.276815, 0.891796, 0.314578, 0.896144, 0.221817, 0.866213, 0.280341, 0.648313, 0.28986, 0.648313, 0.18014, 0.838354, 0.18014, 0.88363, 0.123337, 0.88363, 0.123337, 0.77487, 0.123337, 0.800454, 0.157575, 0.728876, 0.220604, 0.783037, 0.314578, 0.0922794, 0.259959, 0.49, 0.0303352, 0.887721, 0.259959, 0.887721, 0.259959, 0.887721, 0.719207, 0.49, 0.948832, 0.49, 0.948832, 0.0922794, 0.719207, 0.0922794, 0.259959, 0.891796, 0.314578, 0.937791, 0.217311, 0.648313, 0.18014, 0.743333, 0.12528, 0.838354, 0.18014, 0.838354, 0.18014, 0.838354, 0.28986, 0.743333, 0.34472, 0.743333, 0.34472, 0.648313, 0.28986, 0.838354, 0.18014),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 0, 1, 24, 25, 27, 26, 6, 7, 28, 9, 10, 29, 30, 32, 31, 33, 35, 34, 36, 38, 37, 15, 16, 39, 18, 19, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48)
	],
	"morph_arrays":[]
}

[sub_resource id=16 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D uni1_textpng003;


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    roughness_out = 1.0;
}



void vertex() {
	
}


void fragment() {
	// node: Image Texture
	// type: ShaderNodeTexImage
	// texture image from node Image Texture
	vec4 var1_ImageTexture_Color;
	float var2_ImageTexture_Alpha;
	node_tex_image(vec3(0.0, 0.0, 0.0), uni1_textpng003, var1_ImageTexture_Color, var2_ImageTexture_Alpha);
	
	// node: Diffuse BSDF
	// type: ShaderNodeBsdfDiffuse
	float var3_DiffuseBSDF_Roughness;
	var3_DiffuseBSDF_Roughness = 0.0;
	vec3 var4_out_albedo;
	float var5_out_specular;
	float var6_out_oren_nayar_roughness;
	node_bsdf_diffuse(var1_ImageTexture_Color, var3_DiffuseBSDF_Roughness, var4_out_albedo, var5_out_specular, var6_out_oren_nayar_roughness);
	
	ALBEDO = var4_out_albedo;
	SPECULAR = var5_out_specular;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
}
"

[sub_resource id=17 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(16)
shader_param/uni1_textpng003 = ExtResource(6)

[sub_resource id=18 type="ArrayMesh"]

resource_name = "Cylinder007"
surfaces/0 = {
	"material":SubResource(17),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 0.2, -1.0, 0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, 0.2, -0.5, 0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, -0.2, -1.0, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, 0.5, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, 0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, -0.5, -0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -8.74228e-08, 0.2, 1.0, 0.866025, 0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, -0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, -8.74228e-08, -0.2, 1.0, -0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5),
		Vector3Array(0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 0.5, 0.0, -0.866025, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0),
		FloatArray(-0.277573, 0.947244, -0.160257, 1.0, -0.520578, 0.799165, -0.300556, 1.0, -0.157988, 0.983219, -0.0912146, 1.0, 0.0, 0.0373212, -0.999303, 1.0, 0.0, 0.0373212, -0.999303, 1.0, 0.0, 0.0373212, -0.999303, 1.0, 0.577291, -0.745417, -0.333299, 1.0, 0.10894, -0.992057, -0.0628966, 1.0, 0.714895, -0.564416, -0.412745, 1.0, -0.277574, -0.947244, -0.160257, 1.0, -0.520579, -0.799164, -0.300556, 1.0, -0.157989, -0.983219, -0.0912152, 1.0, -0.5, 0.0, -0.866025, -1.0, -0.5, 0.0, -0.866025, -1.0, -0.5, 0.0, -0.866025, -1.0, 0.0, -0.0282846, -0.9996, 1.0, 0.0, -0.00904188, -0.999959, 1.0, 0.0, -0.0373217, -0.999303, 1.0, 0.577291, 0.745417, -0.333299, 1.0, 0.108941, 0.992056, -0.0628969, 1.0, 0.714896, 0.564416, -0.412745, 1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, -0.613785, 0.705472, -0.354369, 1.0, 1.49012e-07, -5.99447e-07, -1.0, 1.0, 1.49012e-07, -5.99447e-07, -1.0, 1.0, 1.49012e-07, -5.99447e-07, -1.0, 1.0, -0.0996378, -0.993359, 0.0575259, 1.0, -0.613785, -0.705472, -0.354369, 1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 1.72064e-08, -0.866025, -1.0, -0.5, 1.72064e-08, -0.866025, -1.0, -0.5, 1.72064e-08, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866026, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, 0.0, 0.0, -1.0, 1.0, -0.0996373, 0.99336, 0.0575256, 1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.561346, 0.818711, 0.476672, 0.753413, 0.512966, 0.823946, 0.498428, 0.709544, 0.401804, 0.749317, 0.476672, 0.753413, 0.372085, 0.709544, 0.367033, 0.817303, 0.401804, 0.749317, 0.318654, 0.822537, 0.403328, 0.887836, 0.367033, 0.817303, 0.926355, 0.632376, 0.815, 0.825249, 0.703645, 0.632376, 0.381572, 0.931705, 0.478195, 0.891932, 0.403328, 0.887836, 0.507915, 0.931705, 0.512966, 0.823946, 0.478195, 0.891932, 0.676646, 0.781527, 0.676646, 0.671807, 0.866687, 0.671807, 0.498428, 0.709544, 0.498428, 0.709544, 0.372085, 0.709544, 0.401804, 0.749317, 0.318654, 0.822537, 0.381572, 0.931705, 0.703645, 0.632376, 0.815, 0.568084, 0.926355, 0.632376, 0.926355, 0.632376, 0.926355, 0.760958, 0.815, 0.825249, 0.815, 0.825249, 0.703645, 0.760958, 0.703645, 0.632376, 0.507915, 0.931705, 0.561346, 0.818711, 0.676646, 0.671807, 0.771667, 0.616947, 0.866687, 0.671807, 0.866687, 0.671807, 0.866687, 0.781527, 0.771667, 0.836386, 0.771667, 0.836386, 0.676646, 0.781527, 0.866687, 0.671807),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 0, 1, 24, 25, 27, 26, 6, 7, 28, 9, 10, 29, 30, 32, 31, 33, 35, 34, 36, 38, 37, 15, 16, 39, 18, 19, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48)
	],
	"morph_arrays":[]
}

[sub_resource id=19 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D uni1_textpng004;


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    roughness_out = 1.0;
}



void vertex() {
	
}


void fragment() {
	// node: Image Texture
	// type: ShaderNodeTexImage
	// texture image from node Image Texture
	vec4 var1_ImageTexture_Color;
	float var2_ImageTexture_Alpha;
	node_tex_image(vec3(0.0, 0.0, 0.0), uni1_textpng004, var1_ImageTexture_Color, var2_ImageTexture_Alpha);
	
	// node: Diffuse BSDF
	// type: ShaderNodeBsdfDiffuse
	float var3_DiffuseBSDF_Roughness;
	var3_DiffuseBSDF_Roughness = 0.0;
	vec3 var4_out_albedo;
	float var5_out_specular;
	float var6_out_oren_nayar_roughness;
	node_bsdf_diffuse(var1_ImageTexture_Color, var3_DiffuseBSDF_Roughness, var4_out_albedo, var5_out_specular, var6_out_oren_nayar_roughness);
	
	ALBEDO = var4_out_albedo;
	SPECULAR = var5_out_specular;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
}
"

[sub_resource id=20 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(19)
shader_param/uni1_textpng004 = ExtResource(7)

[sub_resource id=21 type="ArrayMesh"]

resource_name = "Cylinder008"
surfaces/0 = {
	"material":SubResource(20),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 0.2, -1.0, 0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, 0.2, -0.5, 0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, -0.2, -1.0, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, 0.5, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, 0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, -0.5, -0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -8.74228e-08, 0.2, 1.0, 0.866025, 0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, -0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, -8.74228e-08, -0.2, 1.0, -0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5),
		Vector3Array(0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 0.5, 0.0, -0.866025, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0),
		FloatArray(-0.277573, 0.947244, -0.160257, 1.0, -0.520578, 0.799165, -0.300556, 1.0, -0.157988, 0.983219, -0.0912146, 1.0, 0.0, 0.0373212, -0.999303, 1.0, 0.0, 0.0373212, -0.999303, 1.0, 0.0, 0.0373212, -0.999303, 1.0, 0.577291, -0.745417, -0.333299, 1.0, 0.10894, -0.992057, -0.0628966, 1.0, 0.714895, -0.564416, -0.412745, 1.0, -0.277574, -0.947244, -0.160257, 1.0, -0.520579, -0.799164, -0.300556, 1.0, -0.157989, -0.983219, -0.0912152, 1.0, -0.5, 0.0, -0.866025, -1.0, -0.5, 0.0, -0.866025, -1.0, -0.5, 0.0, -0.866025, -1.0, 0.0, -0.0282846, -0.9996, 1.0, 0.0, -0.00904188, -0.999959, 1.0, 0.0, -0.0373217, -0.999303, 1.0, 0.577291, 0.745417, -0.333299, 1.0, 0.108941, 0.992056, -0.0628969, 1.0, 0.714896, 0.564416, -0.412745, 1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, -0.613785, 0.705472, -0.354369, 1.0, 1.49012e-07, -5.99447e-07, -1.0, 1.0, 1.49012e-07, -5.99447e-07, -1.0, 1.0, 1.49012e-07, -5.99447e-07, -1.0, 1.0, -0.0996378, -0.993359, 0.0575259, 1.0, -0.613785, -0.705472, -0.354369, 1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 1.72064e-08, -0.866025, -1.0, -0.5, 1.72064e-08, -0.866025, -1.0, -0.5, 1.72064e-08, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866026, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, -0.5, 8.60319e-09, -0.866025, -1.0, 0.0, 0.0, -1.0, 1.0, -0.0996373, 0.99336, 0.0575256, 1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, 5.16191e-08, 1.56821e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0, 1.0, -1.72064e-08, -2.35232e-07, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.561346, 0.818711, 0.476672, 0.753413, 0.512966, 0.823946, 0.498428, 0.709544, 0.401804, 0.749317, 0.476672, 0.753413, 0.372085, 0.709544, 0.367033, 0.817303, 0.401804, 0.749317, 0.318654, 0.822537, 0.403328, 0.887836, 0.367033, 0.817303, 0.241127, 0.592691, 0.129772, 0.785564, 0.0184165, 0.592691, 0.381572, 0.931705, 0.478195, 0.891932, 0.403328, 0.887836, 0.507915, 0.931705, 0.512966, 0.823946, 0.478195, 0.891932, 0.676646, 0.781527, 0.676646, 0.671807, 0.866687, 0.671807, 0.498428, 0.709544, 0.498428, 0.709544, 0.372085, 0.709544, 0.401804, 0.749317, 0.318654, 0.822537, 0.381572, 0.931705, 0.0184165, 0.592691, 0.129772, 0.528399, 0.241127, 0.592691, 0.241127, 0.592691, 0.241127, 0.721273, 0.129772, 0.785564, 0.129772, 0.785564, 0.0184165, 0.721273, 0.0184165, 0.592691, 0.507915, 0.931705, 0.561346, 0.818711, 0.676646, 0.671807, 0.771667, 0.616947, 0.866687, 0.671807, 0.866687, 0.671807, 0.866687, 0.781527, 0.771667, 0.836386, 0.771667, 0.836386, 0.676646, 0.781527, 0.866687, 0.671807),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 0, 1, 24, 25, 27, 26, 6, 7, 28, 9, 10, 29, 30, 32, 31, 33, 35, 34, 36, 38, 37, 15, 16, 39, 18, 19, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48)
	],
	"morph_arrays":[]
}

[sub_resource id=22 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,diffuse_burley,specular_schlick_ggx;
uniform sampler2D uni1_textpng005;


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    roughness_out = 1.0;
}



void vertex() {
	
}


void fragment() {
	// node: Image Texture
	// type: ShaderNodeTexImage
	// texture image from node Image Texture
	vec4 var1_ImageTexture_Color;
	float var2_ImageTexture_Alpha;
	node_tex_image(vec3(0.0, 0.0, 0.0), uni1_textpng005, var1_ImageTexture_Color, var2_ImageTexture_Alpha);
	
	// node: Diffuse BSDF
	// type: ShaderNodeBsdfDiffuse
	float var3_DiffuseBSDF_Roughness;
	var3_DiffuseBSDF_Roughness = 0.0;
	vec3 var4_out_albedo;
	float var5_out_specular;
	float var6_out_oren_nayar_roughness;
	node_bsdf_diffuse(var1_ImageTexture_Color, var3_DiffuseBSDF_Roughness, var4_out_albedo, var5_out_specular, var6_out_oren_nayar_roughness);
	
	ALBEDO = var4_out_albedo;
	SPECULAR = var5_out_specular;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = oren_nayar_rougness
}
"

[sub_resource id=23 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(22)
shader_param/uni1_textpng005 = ExtResource(8)

[sub_resource id=24 type="ArrayMesh"]

resource_name = "Cylinder009"
surfaces/0 = {
	"material":SubResource(23),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 0.2, -1.0, 0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, 0.2, -0.5, 0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, -0.2, -1.0, -0.866025, -0.2, -0.5, -0.866025, -0.2, 0.5, -0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, -0.5, 0.866025, 0.2, 0.5, 0.866025, -0.2, 0.5, -8.74228e-08, 0.2, 1.0, -0.866025, 0.2, 0.5, 0.866025, 0.2, 0.5, 0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, 0.0, 0.2, -1.0, -0.866025, 0.2, -0.5, -0.866025, 0.2, 0.5, -0.866025, 0.2, 0.5, -8.74228e-08, 0.2, 1.0, 0.866025, 0.2, 0.5, -0.866025, 0.2, -0.5, 0.0, 0.2, -1.0, -0.866025, -0.2, -0.5, 0.0, -0.2, -1.0, 0.866025, -0.2, -0.5, 0.866025, -0.2, -0.5, 0.866025, -0.2, 0.5, -8.74228e-08, -0.2, 1.0, -8.74228e-08, -0.2, 1.0, -0.866025, -0.2, 0.5, 0.866025, -0.2, -0.5),
		Vector3Array(0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 1.37651e-08, -1.0, 0.0, 0.5, 0.0, -0.866025, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 1.0, 0.0, 1.49012e-07, 0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 3.44128e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, 1.72064e-08, 1.0, 0.0, -1.0, 0.0, 0.0, -0.5, 0.0, -0.866025, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 1.72064e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, 5.16191e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0, -1.72064e-08, -1.0, 0.0),
		FloatArray(-0.866025, 5.12505e-07, -0.5, -1.0, -0.866025, 4.1889e-07, -0.5, -1.0, -0.866025, 5.56494e-07, -0.5, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.866025, -9.08153e-08, -0.5, -1.0, 0.866025, -2.84086e-07, -0.5, -1.0, 0.866025, 0.0, -0.5, -1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, 2.57161e-08, 0.0, -1.0, 1.0, 2.57161e-08, 0.0, -1.0, 1.0, 2.57161e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, 1.0, 1.37651e-08, -3.92053e-08, -1.0, -0.866025, 3.74901e-07, -0.5, -1.0, 1.49012e-07, 0.0, -1.0, -1.0, 1.49012e-07, 0.0, -1.0, -1.0, 1.49012e-07, 0.0, -1.0, -1.0, 0.866025, -3.74901e-07, -0.5, -1.0, -0.866025, 0.0, -0.5, 1.0, 5.96046e-08, -1.02558e-15, -1.0, 1.0, 5.96046e-08, -1.02558e-15, -1.0, 1.0, 5.96046e-08, -1.02558e-15, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.54297e-07, -2.65489e-15, -1.0, 1.0, 1.54297e-07, -2.65489e-15, -1.0, 1.0, 1.54297e-07, -2.65489e-15, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.866025, 0.0, -0.5, 1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 1.72064e-08, -3.44128e-08, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, 5.16191e-08, 6.27285e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0, 1.0, -1.72064e-08, -1.96026e-07, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.241043, 0.243095, 0.177335, 0.115905, 0.241043, 0.115905, 0.177335, 0.243096, 0.113626, 0.115905, 0.177335, 0.115905, 0.113626, 0.243096, 0.0499182, 0.115905, 0.113626, 0.115905, 0.0333108, 0.254328, 0.103681, 0.0993818, 0.0333108, 0.0993818, 0.25963, 0.712304, 0.0773033, 0.615729, 0.0773032, 0.808879, 0.103681, 0.254328, 0.174051, 0.0993818, 0.103681, 0.0993818, 0.174051, 0.254328, 0.244422, 0.0993818, 0.174051, 0.0993818, 0.648313, 0.28986, 0.648313, 0.18014, 0.838354, 0.18014, 0.177335, 0.243096, 0.177335, 0.243096, 0.113626, 0.243096, 0.113626, 0.115905, 0.0499182, 0.243095, 0.103681, 0.254328, 0.0773032, 0.808879, 0.198854, 0.808879, 0.25963, 0.712304, 0.25963, 0.712304, 0.198854, 0.615729, 0.0773033, 0.615729, 0.0773033, 0.615729, 0.0165277, 0.712304, 0.0773032, 0.808879, 0.174051, 0.254328, 0.244422, 0.254328, 0.648313, 0.18014, 0.743333, 0.12528, 0.838354, 0.18014, 0.838354, 0.18014, 0.838354, 0.28986, 0.743333, 0.34472, 0.743333, 0.34472, 0.648313, 0.28986, 0.838354, 0.18014),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 0, 1, 24, 25, 27, 26, 6, 7, 28, 9, 10, 29, 30, 32, 31, 33, 35, 34, 36, 38, 37, 15, 16, 39, 18, 19, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48)
	],
	"morph_arrays":[]
}
[node type="Spatial" name="Scene"]


[node name="Cylinder001" type="MeshInstance" parent="."]

mesh = SubResource(3)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -2.0)

[node name="Cylinder004" type="MeshInstance" parent="."]

mesh = SubResource(6)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, -2.02337)

[node name="Cylinder003" type="MeshInstance" parent="."]

mesh = SubResource(9)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0)

[node name="Cylinder000" type="MeshInstance" parent="."]

mesh = SubResource(12)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 2.04161)

[node name="Cylinder006" type="MeshInstance" parent="."]

mesh = SubResource(15)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)

[node name="Cylinder007" type="MeshInstance" parent="."]

mesh = SubResource(18)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -2.0)

[node name="Cylinder002" type="MeshInstance" parent="."]

mesh = SubResource(21)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 2.06929)

[node name="Cylinder005" type="MeshInstance" parent="."]

mesh = SubResource(24)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 4.08455)
