[gd_resource type="ShaderMaterial" load_steps=28 format=2]

[ext_resource path="res://Assets/Textures/smoke.jpg" type="Texture" id=1]
[ext_resource path="res://Assets/Textures/noise.tres" type="Texture" id=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=2]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.2, 0.2, 0.2 ) ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorOp" id=5]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=8]

[sub_resource type="VisualShaderNodeTransformVecMult" id=9]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]

[sub_resource type="VisualShaderNodeScalarConstant" id=11]
constant = 0.04

[sub_resource type="VisualShaderNodeScalarConstant" id=12]
constant = 1.2

[sub_resource type="VisualShaderNodeScalarOp" id=13]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=14]
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=16]

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 0.02 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "modelview"

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=22]

[sub_resource type="VisualShaderNodeVectorCompose" id=23]

[sub_resource type="VisualShaderNodeScalarOp" id=24]
operator = 2

[sub_resource type="VisualShader" id=25]
code = "shader_type spatial;
render_mode ambient_light_disabled;

uniform sampler2D tex_vtx_15 : hint_albedo;uniform sampler2D tex_frg_3;


void vertex() {
// Input:4
	vec3 n_out4p0;
	n_out4p0 = VERTEX;

// VectorDecompose:6
	float n_out6p0;
	float n_out6p1;
	float n_out6p2;
	n_out6p0 = n_out4p0.x;
	n_out6p1 = n_out4p0.y;
	n_out6p2 = n_out4p0.z;

// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// Scalar:13
	float n_out13p0;
	n_out13p0 = 1.200000;

// ScalarOp:14
	float n_out14p0;
	n_out14p0 = dot(n_out3p0,vec3(0.333333,0.333333,0.333333)) * n_out13p0;

// Input:16
	float n_out16p0;
	n_out16p0 = TIME;

// ScalarFunc:18
	float n_out18p0;
	n_out18p0 = cos(n_out16p0);

// ScalarOp:19
	float n_in19p1 = 0.02000;
	float n_out19p0;
	n_out19p0 = n_out18p0 * n_in19p1;

// ScalarOp:17
	float n_out17p0;
	n_out17p0 = n_out14p0 + n_out19p0;

// Texture:15
	vec3 n_out15p0;
	float n_out15p1;
	vec4 tex_vtx_15_read = texture( tex_vtx_15 , vec3(n_out17p0).xy );
	n_out15p0 = tex_vtx_15_read.rgb;
	n_out15p1 = tex_vtx_15_read.a;

// VectorDecompose:11
	float n_out11p0;
	float n_out11p1;
	float n_out11p2;
	n_out11p0 = n_out15p0.x;
	n_out11p1 = n_out15p0.y;
	n_out11p2 = n_out15p0.z;

// Scalar:12
	float n_out12p0;
	n_out12p0 = 0.040000;

// ScalarOp:8
	float n_out8p0;
	n_out8p0 = n_out11p1 * n_out12p0;

// VectorCompose:7
	vec3 n_out7p0;
	n_out7p0 = vec3( n_out6p0 , n_out8p0 , n_out6p2 );

// Output:0
	VERTEX = n_out7p0;

}

void fragment() {
// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Input:6
	float n_out6p0;
	n_out6p0 = TIME;

// VectorOp:8
	vec3 n_in8p1 = vec3(0.00000,0.00000,0.00000);
	vec3 n_out8p0;
	n_out8p0 = vec3(n_out6p0) * n_in8p1;

// VectorOp:9
	vec3 n_out9p0;
	n_out9p0 = n_out2p0 + n_out8p0;

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	vec4 tex_frg_3_read = texture( tex_frg_3 , n_out9p0.xy );
	n_out3p0 = tex_frg_3_read.rgb;
	n_out3p1 = tex_frg_3_read.a;

// Color:10
	vec3 n_out10p0;
	float n_out10p1;
	n_out10p0 = vec3(0.000000,0.000000,0.000000);
	n_out10p1 = 1.000000;

// ColorOp:4
	vec3 n_out4p0;
	n_out4p0=abs(n_out3p0-n_out10p0);

// VectorOp:11
	vec3 n_in11p1 = vec3(0.20000,0.20000,0.20000);
	vec3 n_out11p0;
	n_out11p0 = n_out4p0 - n_in11p1;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = dot(n_out11p0,vec3(0.333333,0.333333,0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 73, 62.4444 )
flags/ambient_light_disabled = true
nodes/vertex/0/position = Vector2( 960, 200 )
nodes/vertex/2/node = SubResource( 19 )
nodes/vertex/2/position = Vector2( -80, 360 )
nodes/vertex/3/node = SubResource( 20 )
nodes/vertex/3/position = Vector2( -80, 300 )
nodes/vertex/4/node = SubResource( 21 )
nodes/vertex/4/position = Vector2( -80, 240 )
nodes/vertex/6/node = SubResource( 22 )
nodes/vertex/6/position = Vector2( 180, 200 )
nodes/vertex/7/node = SubResource( 23 )
nodes/vertex/7/position = Vector2( 640, 200 )
nodes/vertex/8/node = SubResource( 24 )
nodes/vertex/8/position = Vector2( 540, 300 )
nodes/vertex/10/node = SubResource( 9 )
nodes/vertex/10/position = Vector2( 600, 460 )
nodes/vertex/11/node = SubResource( 10 )
nodes/vertex/11/position = Vector2( 320, 320 )
nodes/vertex/12/node = SubResource( 11 )
nodes/vertex/12/position = Vector2( 360, 420 )
nodes/vertex/13/node = SubResource( 12 )
nodes/vertex/13/position = Vector2( -240, 480 )
nodes/vertex/14/node = SubResource( 13 )
nodes/vertex/14/position = Vector2( -60, 460 )
nodes/vertex/15/node = SubResource( 14 )
nodes/vertex/15/position = Vector2( 120, 280 )
nodes/vertex/16/node = SubResource( 15 )
nodes/vertex/16/position = Vector2( -220, 600 )
nodes/vertex/17/node = SubResource( 16 )
nodes/vertex/17/position = Vector2( 120, 500 )
nodes/vertex/18/node = SubResource( 17 )
nodes/vertex/18/position = Vector2( -40, 600 )
nodes/vertex/19/node = SubResource( 18 )
nodes/vertex/19/position = Vector2( 140, 620 )
nodes/vertex/connections = PoolIntArray( 4, 0, 6, 0, 6, 0, 7, 0, 6, 2, 7, 2, 11, 1, 8, 0, 12, 0, 8, 1, 8, 0, 7, 1, 3, 0, 14, 0, 7, 0, 10, 1, 2, 0, 10, 0, 15, 0, 11, 0, 7, 0, 0, 0, 13, 0, 14, 1, 17, 0, 15, 0, 14, 0, 17, 0, 16, 0, 18, 0, 18, 0, 19, 0, 19, 0, 17, 1 )
nodes/fragment/0/position = Vector2( 900, 40 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( 140, 60 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( 500, 0 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 480, 220 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( 100, 240 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 300, 180 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( 300, 40 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 240, 360 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 680, 220 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 6, 0, 8, 0, 8, 0, 9, 1, 9, 0, 3, 0, 2, 0, 9, 0, 3, 0, 0, 0, 10, 0, 4, 1, 4, 0, 11, 0, 11, 0, 0, 1 )

[resource]
shader = SubResource( 25 )

