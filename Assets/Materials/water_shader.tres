[gd_resource type="ShaderMaterial" load_steps=8 format=2]

[ext_resource path="res://Assets/Textures/water.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3]

[sub_resource type="VisualShaderNodeVectorOp" id=4]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0.1, 0.1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=5]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShader" id=6]
code = "shader_type spatial;
uniform sampler2D tex_frg_6;


void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// Input:2
	float n_out2p0;
	n_out2p0 = TIME;

// VectorOp:5
	vec3 n_in5p1 = vec3(0.10000,0.10000,0.10000);
	vec3 n_out5p0;
	n_out5p0 = vec3(n_out2p0) * n_in5p1;

// VectorOp:4
	vec3 n_out4p0;
	n_out4p0 = n_out3p0 + n_out5p0;

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	vec4 tex_frg_6_read = texture( tex_frg_6 , n_out4p0.xy );
	n_out6p0 = tex_frg_6_read.rgb;
	n_out6p1 = tex_frg_6_read.a;

// Output:0
	ALBEDO = n_out6p0;

}

void light() {
// Output:0

}
"
nodes/fragment/0/position = Vector2( 780, 40 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 20, 220 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 160, 80 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 340, 60 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 200, 160 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 560, -60 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 5, 0, 4, 1, 3, 0, 4, 0, 4, 0, 6, 0, 6, 0, 0, 0 )

[resource]
shader = SubResource( 6 )

