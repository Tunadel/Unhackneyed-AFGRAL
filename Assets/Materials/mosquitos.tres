[gd_resource type="ShaderMaterial" load_steps=8 format=2]

[ext_resource path="res://Assets/Textures/mosquitos.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.2, 0.2, 0.2 ) ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 3, 3, 3 ), 1, Vector3( 0, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShader" id=6]
code = "shader_type spatial;
uniform sampler2D tex_frg_3;


void vertex() {
// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// VectorOp:3
	vec3 n_in3p0 = vec3(3.00000,3.00000,3.00000);
	vec3 n_out3p0;
	n_out3p0 = n_in3p0 * n_out2p0;

// Output:0
	UV = n_out3p0.xy;

}

void fragment() {
// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	vec4 tex_frg_3_read = textureLod( tex_frg_3 , n_out2p0.xy , dot(n_out2p0,vec3(0.333333,0.333333,0.333333)) );
	n_out3p0 = tex_frg_3_read.rgb;
	n_out3p1 = tex_frg_3_read.a;

// VectorOp:4
	vec3 n_in4p1 = vec3(0.20000,0.20000,0.20000);
	vec3 n_out4p0;
	n_out4p0 = n_out3p0 - n_in4p1;

// Output:0
	ALBEDO = n_out4p0;
	ALPHA = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 240.5, -106.75 )
nodes/vertex/0/position = Vector2( 820, 160 )
nodes/vertex/2/node = SubResource( 4 )
nodes/vertex/2/position = Vector2( 460, 220 )
nodes/vertex/3/node = SubResource( 5 )
nodes/vertex/3/position = Vector2( 620, 200 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 1, 3, 0, 0, 4 )
nodes/fragment/0/position = Vector2( 1240, 20 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 140, 60 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 500, 0 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 680, 20 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 2, 0, 3, 1, 3, 1, 0, 1, 3, 0, 4, 0, 4, 0, 0, 0 )

[resource]
shader = SubResource( 6 )

